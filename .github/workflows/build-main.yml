name: Build

on:
  push:
    branches:
      - main
  schedule:
    # <minute [0,59]> <hour [0,23]> <day of the month [1,31]>
    # <month of the year [1,12]> <day of the week [0,6]>
    # https://pubs.opengroup.org/onlinepubs/9699919799/utilities/crontab.html#tag_20_25_07
    # Run every Monday at 10:24:00 PST
    # (Since these CRONs are used by a lot of people -
    # let's be nice to the servers and schedule it _not_ on the hour)
    - cron: '24 18 * * 1'

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.7, 3.8, 3.9]
        os: [ubuntu-latest, macOS-latest, windows-latest]

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install graphviz (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install graphviz --fix-missing
        sudo apt-get install ffmpeg
    - name: Install graphviz (Mac)
      if: matrix.os == 'macOS-latest'
      run: |
        brew install graphviz
        brew install ffmpeg
    - name: Install graphviz (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        choco install graphviz
        choco install ffmpeg
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install .[test]
    - name: Test with pytest
      run: |
        pytest --cov-report xml --cov=cdp_backend cdp_backend/tests/
    - name: Upload Codecov
      uses: codecov/codecov-action@v1

  lint:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: 3.9
    - name: Install graphviz
      run: |
        sudo apt-get install graphviz
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install .[test]
    - name: Lint with flake8
      run: |
        flake8 cdp_backend --count --verbose --show-source --statistics
    - name: Check imports with isort
      run: |
        isort cdp_backend --check-only
    - name: Check typing with mypy
      run: |
        mypy cdp_backend
    - name: Check with black
      run: |
        black --check cdp_backend

  publish:
    if: "contains(github.event.head_commit.message, 'Bump version')"
    needs: [test, lint]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: 3.9
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel
    - name: Build Package
      run: |
        python setup.py sdist bdist_wheel
    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@master
      with:
        user: CouncilDataProject
        password: ${{ secrets.PYPI_TOKEN }}
